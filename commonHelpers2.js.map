{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n// 1. обробка інформації з інпуту та радіокнопки і їхній запис у константу\n// 2. створення слухача на кнопку і додавання функції з промісом\n// 3. створення функції з шаблоном промісу та шаблонною вставкою констант\n// \n// \n// \n\nconst delay = document.querySelector('input[name=\"delay\"][type=\"number\"]')\nconst submitBtn = document.querySelector('button[type=\"submit\"]')\n\nconst makePromise = ({ value, delay, shouldResolve = true }) => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n              if(shouldResolve) {\n                  resolve(value)\n              } else {\n                  reject(value)\n              }\n          }, delay);\n    });\n  };\n\ndocument.querySelector('form').addEventListener('submit', createPromises)\n\nfunction createPromises(event) {\n    event.preventDefault()\n\n    const stateInput = document.querySelector('input[name=\"state\"]:checked');\n\n    if (!stateInput) {\n        iziToast.error({\n            title: 'Error',\n            message: 'Please select a state'\n        });\n        return;\n    }\n\n    const state = stateInput.value.toLowerCase();\n\n    if (state === 'fulfilled') {\n        makePromise({ value: `✅ Fulfilled promise in ${delay.value}ms`, \n            delay: `${delay.value}`, \n            shouldResolve: true })\n            .then(value => iziToast.info({ \n                title: 'Success', \n                message: value \n            }))\n            .catch(error => iziToast.error({ \n                title: 'Error', \n                message: error})\n            )\n} else if(state === 'rejected') {\n        makePromise({ value: `❌ Rejected promise in ${delay.value}ms`, \n            delay: `${delay.value}`, \n            shouldResolve: false })\n            .then(value => iziToast.info({ \n                title: 'Success', \n                message: value \n            }))\n            .catch(error => iziToast.error({ \n                title: 'Error', \n                message: error})\n            )\n}}"],"names":["delay","makePromise","value","shouldResolve","resolve","reject","createPromises","event","stateInput","iziToast","state","error"],"mappings":"wIAUA,MAAMA,EAAQ,SAAS,cAAc,oCAAoC,EACvD,SAAS,cAAc,uBAAuB,EAEhE,MAAMC,EAAc,CAAC,CAAE,MAAAC,EAAO,MAAAF,EAAO,cAAAG,EAAgB,EAAI,IAC9C,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,WAAW,IAAM,CACNF,EACCC,EAAQF,CAAK,EAEbG,EAAOH,CAAK,CAEnB,EAAEF,CAAK,CAClB,CAAK,EAGL,SAAS,cAAc,MAAM,EAAE,iBAAiB,SAAUM,CAAc,EAExE,SAASA,EAAeC,EAAO,CAC3BA,EAAM,eAAgB,EAEtB,MAAMC,EAAa,SAAS,cAAc,6BAA6B,EAEvE,GAAI,CAACA,EAAY,CACbC,EAAS,MAAM,CACX,MAAO,QACP,QAAS,uBACrB,CAAS,EACD,MACH,CAED,MAAMC,EAAQF,EAAW,MAAM,YAAW,EAEtCE,IAAU,YACVT,EAAY,CAAE,MAAO,0BAA0BD,EAAM,KAAK,KACtD,MAAO,GAAGA,EAAM,KAAK,GACrB,cAAe,EAAI,CAAE,EACpB,KAAKE,GAASO,EAAS,KAAK,CACzB,MAAO,UACP,QAASP,CACzB,CAAa,CAAC,EACD,MAAMS,GAASF,EAAS,MAAM,CAC3B,MAAO,QACP,QAASE,CAAK,CAAC,CAClB,EACHD,IAAU,YACZT,EAAY,CAAE,MAAO,yBAAyBD,EAAM,KAAK,KACrD,MAAO,GAAGA,EAAM,KAAK,GACrB,cAAe,EAAK,CAAE,EACrB,KAAKE,GAASO,EAAS,KAAK,CACzB,MAAO,UACP,QAASP,CACzB,CAAa,CAAC,EACD,MAAMS,GAASF,EAAS,MAAM,CAC3B,MAAO,QACP,QAASE,CAAK,CAAC,CAClB,CACZ"}