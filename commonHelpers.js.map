{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst btn = document.querySelector('[data-start]')\nconst inputDate = document.querySelector('#datetime-picker')\nbtn.setAttribute('disabled', true)\n\nconst timerElements = {\n    days: document.querySelector('[data-days]'),\n    hours: document.querySelector('[data-hours]'),\n    minutes: document.querySelector('[data-minutes]'),\n    seconds: document.querySelector('[data-seconds]')\n  };\n\n\n\nclass Timer {\n    constructor({ onTick }) {\n        this.onTick = onTick;\n        this.intervalID = 0;\n        this.isActive = false;\n        this.targetTime = null;\n    }\n\n    start(targetTime) {\n        this.targetTime = targetTime;\n        if (this.isActive) return;\n\n        this.isActive = true;\n        this.intervalID = setInterval(() => {\n            const timeRemaining = this.targetTime - new Date();\n            if (timeRemaining <= 0) {\n                clearInterval(this.intervalID);\n                this.isActive = false;\n                this.onTick({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n            } else {\n                this.onTick(convertMs(timeRemaining))\n            }\n            }, 1000)\n        }\n    }\n\n\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }\n  \n//   console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n//   console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n//   console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\n  function addLeadingZero(value) {\n    return String(value).padStart(2, \"0\");\n  }\n\n  function updateTimerDisplay({ days, hours, minutes, seconds }) {\n    timerElements.days.textContent = addLeadingZero(days);\n    timerElements.hours.textContent = addLeadingZero(hours);\n    timerElements.minutes.textContent = addLeadingZero(minutes);\n    timerElements.seconds.textContent = addLeadingZero(seconds);\n  }\n\n  const options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        const currentDate = new Date()\n        if (currentDate.getTime() > selectedDates[0].getTime()) {\n            btn.setAttribute('disabled', true)\n            iziToast.error({message: 'Please choose a date in the future'})\n        } else btn.removeAttribute('disabled')\n        const timer = new Timer({ onTick: updateTimerDisplay})\n\n        const date = selectedDates[0]\n\n        btn.addEventListener('click', () => {\n            timer.start(date)\n            btn.setAttribute('disabled', true)\n            inputDate.setAttribute('disabled', true)\n        })\n      console.log(selectedDates[0]);\n    },\n  };\n  \n\n  flatpickr(\"#datetime-picker\", options)\n"],"names":["btn","inputDate","timerElements","Timer","onTick","targetTime","timeRemaining","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","updateTimerDisplay","options","selectedDates","iziToast","timer","date","flatpickr"],"mappings":"2FAKA,MAAMA,EAAM,SAAS,cAAc,cAAc,EAC3CC,EAAY,SAAS,cAAc,kBAAkB,EAC3DD,EAAI,aAAa,WAAY,EAAI,EAEjC,MAAME,EAAgB,CAClB,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CACpD,EAIA,MAAMC,CAAM,CACR,YAAY,CAAE,OAAAC,GAAU,CACpB,KAAK,OAASA,EACd,KAAK,WAAa,EAClB,KAAK,SAAW,GAChB,KAAK,WAAa,IACrB,CAED,MAAMC,EAAY,CACd,KAAK,WAAaA,EACd,MAAK,WAET,KAAK,SAAW,GAChB,KAAK,WAAa,YAAY,IAAM,CAChC,MAAMC,EAAgB,KAAK,WAAa,IAAI,KACxCA,GAAiB,GACjB,cAAc,KAAK,UAAU,EAC7B,KAAK,SAAW,GAChB,KAAK,OAAO,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAG,CAAA,GAEzD,KAAK,OAAOC,EAAUD,CAAa,CAAC,CAEvC,EAAE,GAAI,EACV,CACJ,CAIL,SAASC,EAAUC,EAAI,CAQnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CAMD,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACrC,CAED,SAASC,EAAmB,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC7DV,EAAc,KAAK,YAAcW,EAAeJ,CAAI,EACpDP,EAAc,MAAM,YAAcW,EAAeH,CAAK,EACtDR,EAAc,QAAQ,YAAcW,EAAeF,CAAO,EAC1DT,EAAc,QAAQ,YAAcW,EAAeD,CAAO,CAC3D,CAED,MAAMI,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACC,IAAI,KAAM,EACd,QAAS,EAAGA,EAAc,CAAC,EAAE,WACzCjB,EAAI,aAAa,WAAY,EAAI,EACjCkB,EAAS,MAAM,CAAC,QAAS,oCAAoC,CAAC,GAC3DlB,EAAI,gBAAgB,UAAU,EACrC,MAAMmB,EAAQ,IAAIhB,EAAM,CAAE,OAAQY,CAAkB,CAAC,EAE/CK,EAAOH,EAAc,CAAC,EAE5BjB,EAAI,iBAAiB,QAAS,IAAM,CAChCmB,EAAM,MAAMC,CAAI,EAChBpB,EAAI,aAAa,WAAY,EAAI,EACjCC,EAAU,aAAa,WAAY,EAAI,CACnD,CAAS,EACH,QAAQ,IAAIgB,EAAc,CAAC,CAAC,CAC7B,CACL,EAGEI,EAAU,mBAAoBL,CAAO"}